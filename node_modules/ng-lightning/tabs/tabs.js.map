{"version":3,"file":"tabs.js","sourceRoot":"","sources":["../../../../temp/inline/tabs/tabs.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,eAAe,EAAE,MAAM,EAAE,YAAY,EAAC,MAAM,eAAe,CAAC;AACjG,OAAO,EAAC,KAAK,EAAE,SAAS,EAAC,MAAM,cAAc,CAAC;AAC9C,OAAO,EAAC,MAAM,EAAC,MAAM,OAAO,CAAC;;;oBASW,SAAS;8BAgBpB,IAAI,YAAY,EAAU;0BAShC,IAAI;;0BAnBF,gCAAW;uBAAC,QAAkC;YACnE,IAAI,QAAQ,KAAK,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAEvC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAEzB,IAAI,CAAC,IAAI,CAAC,IAAI;gBAAE,OAAO;YAEvB,IAAI,CAAC,QAAQ,EAAE,CAAC;;;;;0BAKL,8BAAS;aAGtB;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;SACxB;uBALsB,SAAc;YACnC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;;;;;IAQzC,oCAAkB,GAAlB;QAAA,iBAMC;;QAJC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAA5B,CAA4B,CAAC,CAAC;SAChD;KACF;IAED,wBAAM,GAAN,UAAO,GAAW;QAChB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC/B;IAED,sBAAI,GAAJ,UAAK,GAAU,EAAE,KAAa;QAC5B,GAAG,CAAC,cAAc,EAAE,CAAC;QAErB,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACjC,IAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC;QACrD,IAAI,CAAC,MAAM,CAAE,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,aAAa,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAE,CAAC;KAC1E;IAEO,0BAAQ,GAAhB;QACE,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC;SAC/B;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAChC,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;SAC9B;KACF;IAEO,yBAAO,GAAf,UAAgB,KAA0B;QAA1B,sBAAA,EAAA,QAAa,IAAI,CAAC,QAAQ;QACxC,IAAI,KAAK,YAAY,MAAM,EAAE;YAC3B,OAAO,KAAK,CAAC;SACd;QACD,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;YAChB,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;SACpC;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAC,CAAS;YACxC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC;SAC/B,CAAC,CAAC;KACJ;;gBA1EF,SAAS,SAAC;oBACT,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,4rBAET;iBACF;;;;yBAEE,KAAK;yBAEL,eAAe,SAAC,MAAM;gCAItB,KAAK,SAAC,UAAU;mCAUhB,MAAM;8BAEN,KAAK;;kBA7BR;;SAUa,OAAO","sourcesContent":["import {Component, Input, QueryList, ContentChildren, Output, EventEmitter} from '@angular/core';\nimport {isInt, toBoolean} from '../util/util';\nimport {NglTab} from './tab';\n\n@Component({\n  selector: 'ngl-tabs',\n  template: `\n    <ul [ngClass]=\"'slds-tabs--' + type + '__nav'\" role=\"tablist\" (keydown.ArrowLeft)=\"move($event, -1)\" (keydown.ArrowRight)=\"move($event, 1)\"><li *ngFor=\"let tab of tabs\" [ngClass]=\"'slds-tabs--' + type + '__item'\" [class.slds-active]=\"tab.active\" [class.slds-text-title--caps]=\"titleCaps\" (click)=\"select(tab)\" role=\"presentation\"><a [nglInternalOutlet]=\"tab.heading\" [ngClass]=\"'slds-tabs--' + type + '__link'\" role=\"tab\" [attr.aria-selected]=\"tab.active\" [attr.tabindex]=\"tab.active ? 0 : 1\"></a></li></ul><div [ngClass]=\"'slds-tabs--' + type + '__content'\" role=\"tabpanel\"><ng-template [ngTemplateOutlet]=\"activeTab?.templateRef\"></ng-template></div>\n  `,\n})\nexport class NglTabs {\n  @Input() type: 'default' | 'scoped' = 'default';\n\n  @ContentChildren(NglTab) tabs: QueryList<NglTab>;\n\n  activeTab: NglTab;\n  selected: string | number | NglTab;\n  @Input('selected') set setSelected(selected: string | number | NglTab) {\n    if (selected === this.selected) return;\n\n    this.selected = selected;\n\n    if (!this.tabs) return; // Wait for content to initialize\n\n    this.activate();\n  }\n\n  @Output() selectedChange = new EventEmitter<NglTab>();\n\n  @Input() set titleCaps(titleCaps: any) {\n    this._titleCaps = toBoolean(titleCaps);\n  }\n  get titleCaps() {\n    return this._titleCaps;\n  }\n\n  private _titleCaps = true;\n\n  ngAfterContentInit() {\n    // Initial selection after all tabs are created\n    this.activate();\n    if (!this.activeTab) {\n      setTimeout(() => this.select(this.tabs.first));\n    }\n  }\n\n  select(tab: NglTab) {\n    this.selectedChange.emit(tab);\n  }\n\n  move(evt: Event, moves: number) {\n    evt.preventDefault();\n\n    const tabs = this.tabs.toArray();\n    const selectedIndex = tabs.indexOf( this.activeTab );\n    this.select( tabs[(tabs.length + selectedIndex + moves) % tabs.length] );\n  }\n\n  private activate() {\n    if (this.activeTab) {\n      this.activeTab.active = false;\n    }\n    this.activeTab = this.findTab();\n    if (this.activeTab) {\n      this.activeTab.active = true;\n    }\n  }\n\n  private findTab(value: any = this.selected): NglTab {\n    if (value instanceof NglTab) {\n      return value;\n    }\n    if (isInt(value)) {\n      return this.tabs.toArray()[+value];\n    }\n    return this.tabs.toArray().find((t: NglTab) => {\n      return t.id && t.id === value;\n    });\n  }\n}\n"]}