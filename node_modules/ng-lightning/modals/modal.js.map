{"version":3,"file":"modal.js","sourceRoot":"","sources":["../../../../temp/inline/modals/modal.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,SAAS,EAAE,YAAY,EAAC,MAAM,eAAe,CAAC;AACxH,OAAO,EAAC,SAAS,EAAE,QAAQ,EAAC,MAAM,cAAc,CAAC;AACjD,OAAO,EAAC,cAAc,EAAC,MAAM,UAAU,CAAC;AACxC,OAAO,EAAC,sBAAsB,EAAC,MAAM,UAAU,CAAC;;;sBAYpB,EAAE;yBAYhB,QAAQ,CAAC,cAAc,CAAC;0BAeb,IAAI,YAAY,EAAE;qBAMhB,IAAI;4BACN,KAAK;;0BA/Bf,iCAAW;aAGxB;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;SAC1B;uBALwB,WAA6B;YACpD,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;;;;;0BAUhC,0BAAI;aASjB;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;uBAXiB,KAAU;;YAC1B,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,KAAK,KAAK,IAAI,CAAC,IAAI;gBAAE,OAAO;YAEhC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,UAAU,EAAE,EAAjB,CAAiB,CAAC,CAAC;aACrC;;;;;IAgBH,wBAAK,aAAC,GAAW;QACf,IAAI,GAAG,EAAE;YACP,GAAG,CAAC,eAAe,EAAE,CAAC;SACvB;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;IAG9B,6BAAU,GAAV;QACE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACxC;;gBAxDF,SAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,8xCAET;oBACD,IAAI,EAAE;wBACJ,UAAU,EAAE,GAAG;qBAChB;iBACF;;;;2BAEE,KAAK;yBACL,KAAK;gCAEL,KAAK;gCAOL,SAAS,SAAC,aAAa;yBAIvB,KAAK;+BAaL,MAAM;8BAEN,YAAY,SAAC,sBAAsB;2BAEnC,YAAY,SAAC,cAAc;0BAK3B,YAAY,SAAC,aAAa,EAAE,CAAC,QAAQ,CAAC;;mBAnDzC;;SAca,QAAQ;AAgDpB,CAAC","sourcesContent":["import {Component, Input, Output, ElementRef, EventEmitter, HostListener, ViewChild, ContentChild} from '@angular/core';\nimport {toBoolean, uniqueId} from '../util/util';\nimport {NglModalFooter} from './footer';\nimport {NglModalHeaderTemplate} from './header';\n\n@Component({\n  selector: 'ngl-modal',\n  template: `\n    <div class=\"slds-modal\" [class.slds-fade-in-open]=\"open\" [ngClass]=\"[size ? 'slds-modal--' + size : '']\" [attr.aria-hidden]=\"!open\" role=\"dialog\" [attr.aria-labelledby]=\"headingId\"><div class=\"slds-modal__container\"><div class=\"slds-modal__header\" [class.slds-modal__header--empty]=\"!header &amp;&amp; !headerTpl\"><button class=\"slds-button slds-button--icon-inverse slds-modal__close\" #closeButton type=\"button\" (click)=\"close()\"><svg class=\"slds-button__icon slds-button__icon--large\" nglIcon=\"close\"></svg><span class=\"slds-assistive-text\">Close</span></button><h2 class=\"slds-text-heading--medium\" *ngIf=\"header\" [id]=\"headingId\">{{header}}</h2><ng-template *ngIf=\"headerTpl\" [ngTemplateOutlet]=\"headerTpl.templateRef\" [ngTemplateOutletContext]=\"{id: headingId}\"></ng-template><ng-content select=\"[tagline]\"></ng-content></div><div class=\"slds-modal__content slds-p-around--medium\"><ng-content select=\"[body]\"></ng-content></div><div class=\"slds-modal__footer\" *ngIf=\"footer\" [class.slds-modal__footer--directional]=\"directional\"><ng-template [ngTemplateOutlet]=\"footer.templateRef\"></ng-template></div></div></div><div tabindex=\"0\" (focus)=\"focusFirst()\"></div><div class=\"slds-backdrop\" [class.slds-backdrop--open]=\"open\"></div>\n  `,\n  host: {\n    'tabindex': '0',\n  },\n})\nexport class NglModal {\n  @Input() header: string = '';\n  @Input() size: 'large';\n\n  @Input() set directional(directional: string | boolean) {\n    this._directional = toBoolean(directional);\n  }\n  get directional() {\n    return this._directional;\n  }\n\n  @ViewChild('closeButton') closeButton: ElementRef;\n\n  headingId = uniqueId('modal_header');\n\n  @Input() set open(_open: any) {\n    _open = toBoolean(_open);\n    if (_open === this.open) return;\n\n    this._open = _open;\n    if (this.open) {\n      setTimeout(() => this.focusFirst());\n    }\n  }\n  get open() {\n    return this._open;\n  }\n\n  @Output() openChange = new EventEmitter();\n\n  @ContentChild(NglModalHeaderTemplate) headerTpl: NglModalHeaderTemplate;\n\n  @ContentChild(NglModalFooter) footer: NglModalFooter;\n\n  private _open: boolean = true;\n  private _directional = false;\n\n  @HostListener('keydown.esc', ['$event'])\n  close(evt?: Event) {\n    if (evt) {\n      evt.stopPropagation();\n    }\n    this.openChange.emit(false);\n  }\n\n  focusFirst() {\n    this.closeButton.nativeElement.focus();\n  }\n};\n"]}