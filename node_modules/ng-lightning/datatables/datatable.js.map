{"version":3,"file":"datatable.js","sourceRoot":"","sources":["../../../../temp/inline/datatables/datatable.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, ChangeDetectorRef, ContentChild, ContentChildren, QueryList, ElementRef, Renderer2, HostBinding, Output, EventEmitter} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {NglDatatableColumn} from './column';\nimport {NglDatatableLoadingOverlay, NglDatatableNoRowsOverlay} from './overlays';\n\nexport interface INglDatatableSort {\n  key: string;\n  order: 'asc' | 'desc';\n};\n\nexport interface INglDatatableRowClick {\n  event: Event;\n  data: any;\n};\n\n@Component({\n  selector: 'table[ngl-datatable]',\n  template: `\n    <thead><tr class=\"slds-text-title--caps\"><th *ngFor=\"let col of columns; trackBy:columnTrackBy\" ngl-internal-datatatable-head [heading]=\"col.heading\" [headingTpl]=\"col.headingTpl?.templateRef\" [sortable]=\"col.sortable\" [sortOrder]=\"getColumnSortOrder(col)\" (onSort)=\"onColumnSort(col, $event)\" [ngClass]=\"col.headClass\"></th></tr></thead><tbody><ng-template #noData><tr><td [attr.colspan]=\"columns.length\"><ng-template [ngTemplateOutlet]=\"noRowsOverlay?.templateRef\"></ng-template></td></tr></ng-template><ng-container *ngIf=\"data &amp;&amp; data.length &gt; 0; else noData\"><tr *ngFor=\"let d of data; let i = index; trackBy:dataTrackBy\" (click)=\"rowClick($event, d)\"><td *ngFor=\"let col of columns; trackBy:columnTrackBy\" [ngClass]=\"col.cellClass\" ngl-internal-datatatable-cell [row]=\"d\" [column]=\"col\" [index]=\"i\"></td></tr></ng-container></tbody><div class=\"ngl-datatable-loading slds-grid slds-grid--vertical-align-center slds-grid--align-center\" *ngIf=\"showLoading\"><ng-template [ngTemplateOutlet]=\"loadingOverlay.templateRef\"></ng-template></div>\n  `,\n  host: {\n    '[class.slds-is-relative]': 'loading',\n  },\n  styles: [`\n    .ngl-datatable-loading {\n      position: absolute;\n      z-index: 1;\n      top: 0; left: 0; right: 0; bottom: 0;\n      background: rgba(255, 255, 255, 0.5)\n    }\n  `],\n})\nexport class NglDatatable {\n\n  @Input() data: any[] = [];\n  @Input() trackByKey: string;\n\n  @HostBinding('class.slds-table--bordered')\n  @Input() bordered = true;\n\n  @HostBinding('class.slds-table--striped')\n  @Input() striped = true;\n\n  @Input() sort: INglDatatableSort;\n  @Output() sortChange = new EventEmitter<INglDatatableSort>();\n\n  @Input() loading: boolean = false;\n  @ContentChild(NglDatatableLoadingOverlay) loadingOverlay: NglDatatableLoadingOverlay;\n  get showLoading() {\n    return this.loading && this.loadingOverlay;\n  }\n\n  @ContentChild(NglDatatableNoRowsOverlay) noRowsOverlay: NglDatatableNoRowsOverlay;\n\n  @ContentChildren(NglDatatableColumn) columns: QueryList<NglDatatableColumn>;\n\n  @Output() onRowClick = new EventEmitter<INglDatatableRowClick>();\n\n  private _columnsSubscription: Subscription;\n\n  constructor(private detector: ChangeDetectorRef, element: ElementRef, renderer: Renderer2) {\n    renderer.addClass(element.nativeElement, 'slds-table');\n  }\n\n  columnTrackBy(index: number, column: NglDatatableColumn) {\n    return column.key || index;\n  }\n\n  dataTrackBy = (index: number, data: any) => {\n    return this.trackByKey ? data[this.trackByKey] : index;\n  }\n\n  onColumnSort(column: NglDatatableColumn, order: 'asc' | 'desc') {\n    const key = column.key;\n    if (!key) {\n      throw new Error(`ng-lightning: No \"key\" property is set for sortable column \"${column.heading}\"`);\n    }\n    this.sortChange.emit({key, order});\n  }\n\n  getColumnSortOrder(column: NglDatatableColumn) {\n    return this.sort && column.key === this.sort.key ? this.sort.order : null;\n  }\n\n  rowClick(event: Event, data: any) {\n    this.onRowClick.emit({ event, data });\n  }\n\n  ngAfterContentInit() {\n    this._columnsSubscription = this.columns.changes.subscribe(() => this.detector.markForCheck());\n  }\n\n  ngOnDestroy() {\n    if (this._columnsSubscription) {\n      this._columnsSubscription.unsubscribe();\n      this._columnsSubscription = null;\n    }\n  }\n};\n"]}