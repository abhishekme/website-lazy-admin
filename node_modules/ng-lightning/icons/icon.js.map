{"version":3,"file":"icon.js","sourceRoot":"","sources":["../../../../temp/inline/icons/icon.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, ElementRef, Renderer2, ChangeDetectionStrategy, Attribute, Optional, OnChanges} from '@angular/core';\nimport {toBoolean, replaceClass} from '../util/util';\nimport {NglButton} from '../buttons/button';\nimport {NglButtonIcon} from '../buttons/button-icon';\n\nexport type NglIconCategory = 'action' | 'custom' | 'doctype' | 'standard' | 'utility';\n\n@Component({\n  selector: 'ngl-icon, [ngl-icon]',\n  template: `\n    <svg [nglIcon]=\"icon\" [nglIconCategory]=\"category\" [ngClass]=\"svgClasses()\"></svg><span class=\"slds-assistive-text\" *ngIf=\"alt\">{{alt}}</span><ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NglIcon implements OnChanges {\n  _icon: string;\n  @Input('icon') set setIcon(icon: string) {\n    this._icon = icon;\n  }\n  get icon() {\n    return this.category === 'custom' ? `custom${this._icon}` : this._icon;\n  }\n\n  @Input('category') set setCategory(category: NglIconCategory) {\n    this.category = category || 'utility';\n  }\n  @Input() type: 'default' | 'warning' | 'error';\n  @Input() align: 'left' | 'right';\n  @Input() size: 'x-small' | 'small' | 'large';\n  @Input() alt: string;\n  @Input() svgClass: string | string[];\n\n  category: NglIconCategory = 'utility';\n\n  private button: boolean;\n  private _containerClass: string[];\n\n  constructor(public element: ElementRef, public renderer: Renderer2,\n              @Attribute('state') private state: string,\n              @Attribute('button') button: string,\n              @Optional() nglButton: NglButton, @Optional() nglButtonIcon: NglButtonIcon) {\n\n    this.button = button === null ? !!(nglButton || nglButtonIcon) : toBoolean(button);\n    if (state) {\n      renderer.addClass(element.nativeElement, `slds-text-${state}`);\n    }\n  }\n\n  ngOnChanges(changes?: any) {\n    const { containerClass } = this;\n    replaceClass(this, this._containerClass, containerClass);\n    this._containerClass = containerClass;\n  }\n\n  svgClasses() {\n    const classes = Array.isArray(this.svgClass) ? <string[]>this.svgClass : [this.svgClass || ''];\n\n    const prefix = this.button ? 'slds-button__icon' : 'slds-icon';\n    classes.push(this.state ? 'slds-button__icon--stateful' : prefix);\n\n    if (this.size) {\n      classes.push(`${prefix}--${this.size}`);\n    }\n\n    if (this.type) {\n      classes.push(`slds-icon-text-${this.type}`);\n    }\n\n    if (this.align || this.state) {\n      classes.push(`slds-button__icon--${this.align || 'left'}`);\n    }\n\n    return classes;\n  }\n\n  private get containerClass() {\n    return /^(action|custom|standard)$/.test(this.category)\n            ? ['slds-icon_container', `slds-icon-${this.category}-${this.icon.replace('_', '-')}`]\n            : null;\n  }\n};\n"]}