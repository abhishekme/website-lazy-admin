{"version":3,"file":"button-state.js","sourceRoot":"","sources":["../../../../temp/inline/buttons/button-state.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,UAAU,EAAE,SAAS,EAAC,MAAM,eAAe,CAAC;AAC1G,OAAO,EAAC,SAAS,EAAC,MAAM,cAAc,CAAC;;IAsBrC,wBAAmB,OAAmB,EAAS,QAAmB;QAA/C,YAAO,GAAP,OAAO,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAW;8BAFjB,IAAI,YAAY,EAAW;KAEN;0BAXzC,oCAAQ;aAMrC;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;uBARqC,SAAS;YAC7C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;YAEtC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;;;;IAUzD,uCAAc;QACZ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;IAGnC,oCAAW,GAAnB,UAAoB,SAAiB,EAAE,KAAc;QACnD,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;SAC/D;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;SAClE;KACF;;gBAjCF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,IAAI,EAAE;wBACJ,WAAW,EAAE,WAAW;qBACzB;iBACF;;;;gBAR6D,UAAU;gBAAE,SAAS;;;6BAYhF,KAAK,SAAC,gBAAgB;mCAStB,MAAM,SAAC,sBAAsB;mCAI7B,YAAY,SAAC,OAAO;;yBAzBvB;;SASa,cAAc;AA4B1B,CAAC","sourcesContent":["import {Directive, Input, Output, EventEmitter, HostListener, ElementRef, Renderer2} from '@angular/core';\nimport {toBoolean} from '../util/util';\n\n@Directive({\n  selector: '[nglButtonState]',\n  host: {\n    'aria-live': 'assertive',\n  },\n})\nexport class NglButtonState {\n\n  _selected: boolean;\n  @Input('nglButtonState') set selected(_selected) {\n    this._selected = toBoolean(_selected);\n\n    this.toggleClass('slds-is-selected', this._selected);\n    this.toggleClass('slds-not-selected', !this._selected);\n  }\n  get selected() {\n    return this._selected;\n  }\n  @Output('nglButtonStateChange') selectedChange = new EventEmitter<boolean>();\n\n  constructor(public element: ElementRef, public renderer: Renderer2) {}\n\n  @HostListener('click')\n  onSelectChange() {\n    this.selectedChange.emit(!this.selected);\n  }\n\n  private toggleClass(className: string, isAdd: boolean) {\n    if (isAdd) {\n      this.renderer.addClass(this.element.nativeElement, className);\n    } else {\n      this.renderer.removeClass(this.element.nativeElement, className);\n    }\n  }\n};\n"]}