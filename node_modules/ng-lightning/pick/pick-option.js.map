{"version":3,"file":"pick-option.js","sourceRoot":"","sources":["../../../../temp/inline/pick/pick-option.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAEtF,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;;IA0B/B,uBAAoB,OAAmB,EAAU,QAAmB,EAAU,OAAgB;QAA1E,YAAO,GAAP,OAAO,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAAU,YAAO,GAAP,OAAO,CAAS;uBAH5E,KAAK;KAG2E;IAdlG,sBAAI,iCAAM;QADV,0CAA0C;;;QAC1C;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;;;OAAA;0BAE2B,mCAAQ;uBAAC,KAAU;YAC7C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;;;;IActB,4BAAI,aAAC,GAAW;QACd,IAAI,GAAG,EAAE;YACP,GAAG,CAAC,cAAc,EAAE,CAAC;SACtB;QACD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;IAGzC,gCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,KAAK;YACtD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAErC,IAAM,WAAW,GAAG,KAAI,CAAC,kBAAkB,IAAI,KAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC;YAC/E,IAAI,WAAW,EAAE;gBACf,IAAI,KAAI,CAAC,MAAM,EAAE;oBACf,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAI,CAAC,OAAO,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;iBACjE;qBAAM;oBACL,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;iBACpE;aACF;SACF,CAAC,CAAC;KACJ;IAED,mCAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACzC;IAEO,iCAAS,GAAjB,UAAkB,KAAU;QAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YAC3B,IAAI,CAAC,KAAK;gBAAE,OAAO,KAAK,CAAC;YACzB,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACtF;aAAM;YACL,OAAO,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC;SAC9B;KACF;;gBA/DF,SAAS,SAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,QAAQ,EAAE,eAAe;oBACzB,IAAI,EAAE;wBACJ,MAAM,EAAE,QAAQ;qBACjB;iBACF;;;;gBAVwC,UAAU;gBAAE,SAAS;gBAErD,OAAO;;;6BAgBb,KAAK,SAAC,eAAe;uCAIrB,KAAK;yBAQL,YAAY,SAAC,OAAO,cACpB,YAAY,SAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,cACxC,YAAY,SAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;;wBAhC3C;;SAWa,aAAa","sourcesContent":["import { Directive, Input, HostListener, ElementRef, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { NglPick } from './pick';\n\n@Directive({\n  selector: '[nglPickOption]',\n  exportAs: 'nglPickOption',\n  host: {\n    'role': 'button',\n  },\n})\nexport class NglPickOption {\n\n  // Use a getter to prevent direct altering\n  get active() {\n    return this._active;\n  }\n\n  @Input('nglPickOption') set setValue(value: any) {\n    this._value = value;\n  }\n\n  @Input() nglPickActiveClass: string;\n\n  private _value: any;\n  private _active = false;\n  private _subscription: Subscription;\n\n  constructor(private element: ElementRef, private renderer: Renderer2, private nglPick: NglPick) {}\n\n  @HostListener('click')\n  @HostListener('keydown.Space', ['$event'])\n  @HostListener('keydown.Enter', ['$event'])\n  pick(evt?: Event) {\n    if (evt) {\n      evt.preventDefault();\n    }\n    this.nglPick.selectOption(this._value);\n  }\n\n  ngOnInit() {\n    this._subscription = this.nglPick.values.subscribe(value => {\n      this._active = this._isActive(value);\n\n      const activeClass = this.nglPickActiveClass || this.nglPick.nglPickActiveClass;\n      if (activeClass) {\n        if (this.active) {\n          this.renderer.addClass(this.element.nativeElement, activeClass);\n        } else {\n          this.renderer.removeClass(this.element.nativeElement, activeClass);\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n    this.nglPick.optionRemoved(this._value);\n  }\n\n  private _isActive(value: any) {\n    if (this.nglPick.isMultiple) {\n      if (!value) return false;\n      return Array.isArray(value) ? value.indexOf(this._value) > -1 : !!value[this._value];\n    } else {\n      return this._value === value;\n    }\n  }\n}\n"]}