{"version":3,"file":"trigger.js","sourceRoot":"","sources":["../../../../temp/inline/popovers/trigger.ts"],"names":[],"mappings":"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","sourcesContent":["import {Directive, Input, ElementRef, ComponentRef, TemplateRef, ViewContainerRef,\n        Renderer2, ComponentFactoryResolver, Injector, EmbeddedViewRef, ComponentFactory,\n        Output, EventEmitter, NgZone} from '@angular/core';\nimport * as Tether from 'tether';\nimport 'rxjs/add/operator/take';\nimport {NglPopover, Direction} from './popover';\nimport {placement} from './placements';\nimport {toBoolean} from '../util/util';\n\n@Directive({\n  selector: '[nglPopover]',\n  exportAs: 'nglPopover',\n})\nexport class NglPopoverTrigger {\n\n  @Input() nglPopover: string | TemplateRef<any>;\n\n  @Input() nglPopoverHeader: string;\n  @Input() nglPopoverFooter: string;\n\n  @Input() set nglPopoverPlacement(_placement: Direction) {\n    this.placement = _placement || 'top';\n    this.setTether();\n  }\n\n  @Input() set nglPopoverTheme(theme: string) {\n    this.theme = theme;\n    this.setPopover();\n  }\n\n  @Input() nglTooltip: string | boolean;\n\n  @Input() set nglPopoverDelay(delay: any | any[]) {\n    delay = Array.isArray(delay) ? delay : [delay, delay];\n    [this.openDelay, this.closeDelay] = delay.map(Number);\n  }\n\n  @Input() set nglInteractive(interactive: boolean | string) {\n    this.interactive = toBoolean(interactive);\n  }\n  get nglInteractive() {\n    return this.interactive;\n  }\n\n  @Input() set nglOpen(open: boolean) {\n    this.toggle(open, open ? this.openDelay : this.closeDelay);\n  }\n\n  // Emit an event when actual popover is shown or hidden\n  @Output() nglPopoverToggled = new EventEmitter<boolean>();\n\n  private popover: NglPopover;\n  private popoverFactory: ComponentFactory<NglPopover>;\n  private componentRef: ComponentRef<NglPopover>;\n  private viewRef: EmbeddedViewRef<any>;\n  private placement: Direction = 'top';\n  private theme: string;\n  private tether: Tether;\n  private openDelay = 0;\n  private closeDelay = 0;\n  private toggleTimeout: any = null;\n  private interactive = false;\n  private interactiveSubscription: any = null;\n\n  constructor(private element: ElementRef, private viewContainer: ViewContainerRef, private injector: Injector,\n              private ngZone: NgZone,\n              private renderer: Renderer2, componentFactoryResolver: ComponentFactoryResolver) {\n    this.popoverFactory = componentFactoryResolver.resolveComponentFactory(NglPopover);\n  }\n\n  // Expose open method\n  open(delay = this.openDelay) {\n    this.toggle(true, delay);\n  }\n\n  // Expose close method\n  close(delay = this.closeDelay) {\n    this.toggle(false, delay);\n  }\n\n  position(async = true) {\n    this.ngZone.runOutsideAngular(() => {\n      if (async) {\n        setTimeout(() => this.tether.position());\n      } else {\n        this.tether.position();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  private toggle(open: boolean, delay: number) {\n    if (this.toggleTimeout !== null) {\n      clearTimeout(this.toggleTimeout);\n      this.toggleTimeout = null;\n    }\n\n    const toggleFn = (open ? this.create : this.destroy).bind(this);\n\n    if (delay > 0) {\n      this.toggleTimeout = setTimeout(() => {\n        this.toggleTimeout = null;\n        toggleFn();\n      }, delay);\n    } else {\n      toggleFn();\n    }\n  }\n\n  private setTether(create = false) {\n    if (!this.tether && !create) return;\n\n    const { attachment, targetAttachment, offset } = placement(this.placement);\n    const options = {\n      element: this.popover.element.nativeElement,\n      target: this.element.nativeElement,\n      attachment,\n      targetAttachment,\n      offset,\n    };\n\n    if (create) {\n      this.tether = new Tether(options);\n    } else {\n      this.tether.setOptions(options);\n    }\n\n    this.setPopover();\n  }\n\n  private setPopover() {\n    if (!this.popover) return;\n\n    const { opposite } = placement(this.placement);\n    this.popover.nubbin = opposite;\n    this.popover.theme = this.theme;\n    this.popover.nglTooltip = this.nglTooltip;\n  }\n\n  private create() {\n    if (this.componentRef) return;\n\n    const { nodes, viewRef } = this.getProjectableNodes();\n    this.viewRef = viewRef;\n\n    this.componentRef = this.viewContainer.createComponent(this.popoverFactory, 0, this.injector, [nodes]);\n    this.popover = this.componentRef.instance;\n    this.popover.header = this.nglPopoverHeader;\n    this.popover.footer = this.nglPopoverFooter;\n    this.popover.afterViewInit.take(1).subscribe(() => this.position(false));\n\n    if (this.nglInteractive) {\n      this.interactiveSubscription = this.popover.onInteraction.subscribe((enter: boolean) => this.nglOpen = enter);\n    }\n\n    this.setTether(true);\n\n    // To avoid unexpected behavior when template \"lives\" inside an OnPush\n    // component, explicitlly request change detection to run on creation.\n    this.popover.changeDetector.markForCheck();\n\n    this.nglPopoverToggled.emit(true);\n  }\n\n  private getProjectableNodes(): { nodes: any[], viewRef?: EmbeddedViewRef<any> } {\n    if (this.nglPopover instanceof TemplateRef) {\n      const viewRef: EmbeddedViewRef<any> = this.viewContainer.createEmbeddedView(<TemplateRef<any>>this.nglPopover);\n      return { nodes: viewRef.rootNodes, viewRef };\n    } else {\n      return { nodes: [this.renderer.createText(<string>this.nglPopover)] };\n    }\n  }\n\n  private destroy() {\n    if (!this.componentRef) return;\n\n    this.tether.destroy();\n    this.tether = null;\n\n    // Cleanup template view\n    if (this.viewRef) {\n      this.viewContainer.remove(this.viewContainer.indexOf(this.viewRef));\n      this.viewRef = null;\n    }\n\n    this.viewContainer.remove(this.viewContainer.indexOf(this.componentRef.hostView));\n    this.componentRef.destroy();\n    this.componentRef = null;\n    this.popover = null;\n\n    if (this.interactiveSubscription) {\n      this.interactiveSubscription.unsubscribe();\n    }\n\n    this.nglPopoverToggled.emit(false);\n  }\n};\n"]}