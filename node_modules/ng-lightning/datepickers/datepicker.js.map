{"version":3,"file":"datepicker.js","sourceRoot":"","sources":["../../../../temp/inline/datepickers/datepicker.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, HostListener} from '@angular/core';\nimport {uniqueId, toBoolean} from '../util/util';\n\nexport type NglInternalDate = { year: number, month: number, day: number, disabled?: boolean};\n\n@Component({\n  selector: 'ngl-datepicker',\n  template: `\n    <div class=\"slds-datepicker__filter slds-grid\"><div class=\"slds-datepicker__filter--month slds-grid slds-grid--align-spread slds-grow\"><div class=\"slds-align-middle\"><button class=\"slds-button slds-button--icon-container\" type=\"button\" (click)=\"keyboardHandler($event, 'MoveMonth', -1)\"><svg class=\"slds-button__icon slds-button__icon--small\" nglIcon=\"left\"></svg><span class=\"slds-assistive-text\">Previous Month</span></button></div><h2 class=\"slds-align-middle\" [id]=\"uid + '_month'\" aria-live=\"assertive\" aria-atomic=\"true\">{{ monthLabel }}</h2><div class=\"slds-align-middle\"><button class=\"slds-button slds-button--icon-container\" type=\"button\" (click)=\"keyboardHandler($event, 'MoveMonth', 1)\"><svg class=\"slds-button__icon slds-button__icon--small\" nglIcon=\"right\"></svg><span class=\"slds-assistive-text\">Next Month</span></button></div></div><ngl-date-year class=\"slds-shrink-none\" [year]=\"current.year\" (yearChange)=\"moveYear($event)\"></ngl-date-year></div><table class=\"datepicker__month\" role=\"grid\" [attr.aria-labelledby]=\"uid + '_month'\"><thead><tr nglWeekdays [firstDayOfWeek]=\"firstDayOfWeek\" [dayNamesShort]=\"dayNamesShort\" [dayNamesLong]=\"dayNamesLong\"></tr></thead><tbody><tr *ngFor=\"let week of weeks; trackBy:indexTrackBy\"><td *ngFor=\"let date of week\" (click)=\"select(date)\" [class.slds-is-today]=\"isActive(date)\" [nglDay]=\"date.day\" [nglDaySelected]=\"isSelected(date)\" [nglDayDisabled]=\"date.disabled\"></td></tr><tr *ngIf=\"showToday\"><td colspan=\"7\" role=\"gridcell\"><a class=\"slds-show--inline-block slds-p-bottom--x-small\" href=\"javascript:void(0)\" (click)=\"selectToday()\">Today</a></td></tr></tbody></table>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'aria-hidden': 'false',\n    '[class.slds-datepicker]': 'true',\n    'tabindex': '0',\n  },\n  styles: [`:host { display: block; }`],\n})\nexport class NglDatepicker {\n  @Input() monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  @Input() dayNamesShort = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  @Input() dayNamesLong = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursda', 'Friday', 'Saturday'];\n\n  date: NglInternalDate;\n  current: NglInternalDate;\n  @Input('date') set _date(date: Date) {\n    this.date = this.parseDate(date);\n    if (this.date) {\n      this.current = Object.assign({}, this.date);\n    }\n    this.render();\n  }\n  @Output() dateChange = new EventEmitter();\n\n  showToday = true;\n  @Input('showToday') set _showToday(showToday: boolean) {\n    this.showToday = toBoolean(showToday);\n  }\n\n  firstDayOfWeek = 0;\n  @Input('firstDayOfWeek') set _firstDayOfWeek(firstDayOfWeek: number) {\n    this.firstDayOfWeek = +firstDayOfWeek;\n    this.render();\n  }\n\n  weeks: NglInternalDate[];\n  uid = uniqueId('datepicker');\n  monthLabel: string;\n\n  moveYear(year: string | number) {\n    this.current.year = +year;\n    this.render();\n  }\n\n  @HostListener('keydown.Enter', ['$event', '\"Enter\"'])\n  @HostListener('keydown.ArrowUp', ['$event', '\"Move\"', '-7'])\n  @HostListener('keydown.ArrowLeft', ['$event', '\"Move\"', '-1'])\n  @HostListener('keydown.ArrowDown', ['$event', '\"Move\"', '7'])\n  @HostListener('keydown.ArrowRight', ['$event', '\"Move\"', '1'])\n  @HostListener('keydown.PageUp', ['$event', '\"MoveMonth\"', '-1'])\n  @HostListener('keydown.PageDown', ['$event', '\"MoveMonth\"', '1'])\n  @HostListener('keydown.Home', ['$event', '\"MoveTo\"', '1'])\n  @HostListener('keydown.End', ['$event', '\"MoveTo\"', '31'])\n  keyboardHandler($event: KeyboardEvent, code: string, param?: number | string) {\n    if ($event) {\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    if (code === 'Enter') {\n      this.select();\n      return;\n    }\n\n    // Change current date\n    let {year, month, day} = this.current;\n    const date = new Date(year, month, day, 12);\n\n    if (code === 'Move') {\n      date.setDate(day + (+param));\n      this.current = { year: date.getFullYear(), month: date.getMonth(), day: date.getDate() };\n    } else if (code === 'MoveMonth') {\n      date.setMonth(month + (+param), 1);\n      this.current = { year: date.getFullYear(), month: date.getMonth(), day };\n    } else if (code === 'MoveTo') {\n      this.current.day = +param;\n    }\n    this.render();\n  }\n\n  isSelected(date: NglInternalDate) {\n    return this.isEqualDate(date, this.date);\n  }\n\n  isActive(date: NglInternalDate) {\n    return this.isEqualDate(date, this.current);\n  }\n\n  select(date: NglInternalDate = this.current) {\n    if (date.disabled) return;\n\n    const {year, month, day} = date;\n    this.dateChange.emit(new Date(year, month, day));\n  }\n\n  indexTrackBy(index: number) {\n    return index;\n  }\n\n  selectToday() {\n    this.dateChange.emit(new Date());\n  }\n\n  private parseDate(date: Date): NglInternalDate {\n    if (!date) return null;\n    return { year: date.getFullYear(), month: date.getMonth(), day: date.getDate() };\n  }\n\n  private isEqualDate(d1: NglInternalDate, d2: NglInternalDate) {\n    return d1 && d2 && d1.day === d2.day && d1.month === d2.month && d1.year === d2.year;\n  }\n\n  private render() {\n    if (!this.current) {\n      this.current = this.today;\n    }\n\n    const { year, month, day } = this.current;\n    this.monthLabel = this.monthNames[month];\n\n    const days = this.daysInMonth(year, month);\n\n    // Keep current day inside limits of this month\n    this.current.day = Math.min(day, days.length);\n\n    Array.prototype.unshift.apply(days, this.daysInPreviousMonth(year, month));\n    const nextMonth = this.daysInNextMonth(year, month + 1, days.length);\n    if (nextMonth) {\n      Array.prototype.push.apply(days, nextMonth);\n    }\n\n    this.weeks = this.split(days);\n  }\n\n  private daysInMonth(year: number, month: number) {\n    const last = new Date(year, month + 1, 0).getDate();\n    return this.getDayObjects(year, month, 1, last);\n  }\n\n  private daysInPreviousMonth(year: number, month: number) {\n    const firstIndex = (new Date(year, month, 1)).getDay();\n    const last = new Date(year, month, 0).getDate();\n    const numDays = (7 + firstIndex - this.firstDayOfWeek) % 7;\n\n    return this.getDayObjects(year, month - 1, last - numDays + 1, last, true);\n  }\n\n  private daysInNextMonth(year: number, month: number, numOfDays: number) {\n    if (numOfDays % 7 === 0) return;\n    return this.getDayObjects(year, month, 1, 7 - (numOfDays % 7), true);\n  }\n\n  private getDayObjects(year: number, month: number, from: number, to: number, disabled = false) {\n    const days: NglInternalDate[] = [];\n    for (let day = from; day <= to; day++) {\n      days.push({ year, month, day, disabled });\n    }\n    return days;\n  }\n\n  private get today() {\n    const today = new Date();\n    return { year: today.getFullYear(), month: today.getMonth(), day: today.getDate() };\n  }\n\n  // Split array into smaller arrays\n  private split = function(arr: any[], size = 7) {\n    const arrays: any[] = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  };\n};\n"]}