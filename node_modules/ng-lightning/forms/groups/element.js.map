{"version":3,"file":"element.js","sourceRoot":"","sources":["../../../../../temp/inline/forms/groups/element.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAE,uBAAuB,EAAE,YAAY,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAyB,MAAM,eAAe,CAAC;AAC/I,OAAO,EAAC,qBAAqB,EAAC,MAAM,aAAa,CAAC;AAClD,OAAO,EAAC,eAAe,EAAC,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAC,oBAAoB,EAAE,YAAY,EAAC,MAAM,eAAe,CAAC;AACjE,OAAO,EAAC,QAAQ,EAAC,MAAM,iBAAiB,CAAC;;IAuBvC,6BAAgC,UAAyC,OAAmB,EAAU,QAAmB;QAAzF,aAAQ,GAAR,QAAQ;QAAiC,YAAO,GAAP,OAAO,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;mBANnH,QAAQ,CAAC,cAAc,CAAC;KAM+F;IAJ7H,sBAAI,2CAAU;aAAd;YACE,OAAO,UAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,IAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,aAAS,CAAC;SAC/E;;;OAAA;IAID,yCAAW,GAAX,UAAY,OAAa;QACvB,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAED,gDAAkB,GAAlB;QACE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,MAAM,KAAK,CAAC,0GAA0G,CAAC,CAAC;SACzH;QAEO,IAAA,0BAAI,CAAoB;QAEhC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAClE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,UAAQ,IAAI,aAAU,CAAC,CAAC;SAC5E;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,UAAQ,IAAM,CAAC,CAAC;SACpE;QAED,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;QAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAEO,0CAAY,GAApB;QACE,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC1D;;gBAhDF,SAAS,SAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,meAET;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;;;;gBAXO,qBAAqB,uBA0Bd,QAAQ;gBA3BoD,UAAU;gBAAE,SAAS;;;8BAc7F,YAAY,SAAC,eAAe;6BAE5B,KAAK,SAAC,OAAO;6BACb,YAAY,SAAC,oBAAoB;;8BAjBpC;;SAaa,mBAAmB;AA0C/B,CAAC","sourcesContent":["import {Component, Input, ChangeDetectionStrategy, ContentChild, Optional, ElementRef, Renderer2, TemplateRef, OnChanges} from '@angular/core';\nimport {NglFormGroupAlternate} from './group-alt';\nimport {NglFormCheckbox} from '../elements/input';\nimport {NglFormLabelTemplate, getFormLabel} from '../form-label';\nimport {uniqueId} from '../../util/util';\n\n@Component({\n  selector: 'ngl-form-group-element',\n  template: `\n    <ng-content></ng-content><label *ngIf=\"contentEl\" [ngClass]=\"labelClass\" [attr.for]=\"uid\" [ngSwitch]=\"!!groupAlt\"><ng-container *ngSwitchCase=\"false\"><span [ngClass]=\"'slds-' + contentEl.type + '--faux'\"></span><span class=\"slds-form-element__label\" [nglInternalOutlet]=\"_label\"></span></ng-container><ng-container *ngSwitchCase=\"true\"><span [ngClass]=\"'slds-' + contentEl.type + '--faux'\" [nglInternalOutlet]=\"_label\"></span></ng-container></label>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NglFormGroupElement implements OnChanges {\n  @ContentChild(NglFormCheckbox) contentEl: NglFormCheckbox;\n\n  @Input('label') labelStr: string;\n  @ContentChild(NglFormLabelTemplate) labelTpl: NglFormLabelTemplate;\n\n  _label: TemplateRef<any> | string;\n\n  uid = uniqueId('form_element');\n\n  get labelClass() {\n    return `slds-${this.contentEl.type}${this.groupAlt ? '--button' : ''}__label`;\n  }\n\n  constructor(@Optional() private groupAlt: NglFormGroupAlternate, private element: ElementRef, private renderer: Renderer2) {}\n\n  ngOnChanges(changes?: any) {\n    this.setFormLabel();\n  }\n\n  ngAfterContentInit() {\n    if (!this.contentEl) {\n      throw Error(`Couldn't find an input radio or checkbox with [nglFormControl] attribute inside <ngl-form-group-element>`);\n    }\n\n    const { type } = this.contentEl;\n\n    if (this.groupAlt) {\n      this.groupAlt.type = type;\n      this.renderer.addClass(this.element.nativeElement, 'slds-button');\n      this.renderer.addClass(this.element.nativeElement, `slds-${type}--button`);\n    } else {\n      this.renderer.addClass(this.element.nativeElement, `slds-${type}`);\n    }\n\n    this.contentEl.id = this.uid;\n    this.setFormLabel();\n  }\n\n  private setFormLabel() {\n    this._label = getFormLabel(this.labelStr, this.labelTpl);\n  }\n};\n"]}