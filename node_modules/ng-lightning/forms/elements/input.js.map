{"version":3,"file":"input.js","sourceRoot":"","sources":["../../../../../temp/inline/forms/elements/input.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAC,MAAM,eAAe,CAAC;AAC/D,OAAO,EAAC,YAAY,EAAC,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAC,qBAAqB,EAAC,MAAM,qBAAqB,CAAC;;;;;gBAGzD,SAAS,SAAC;oBACT,QAAQ,EAAE,qFAAqF;oBAC/F,IAAI,EAAE;wBACJ,oBAAoB,EAAE,MAAM;qBAC7B;iBACF;;;;uBAEE,WAAW,SAAC,IAAI;gCAChB,WAAW,SAAC,uBAAuB;;uBAbtC;;SAWa,YAAY;AAGxB,CAAC;;;;;gBAED,SAAS,SAAC;oBACT,QAAQ,EAAE,0BAA0B;oBACpC,SAAS,EAAE,CAAE,EAAC,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,eAAe,EAAC,CAAE;oBACpE,IAAI,EAAE;wBACJ,uBAAuB,EAAE,MAAM;qBAChC;iBACF;;;;uBAEE,WAAW,SAAC,IAAI;gCAChB,WAAW,SAAC,uBAAuB;;0BAzBtC;;SAuBa,eAAe;;;;;gBAK3B,SAAS,SAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,SAAS,EAAE,CAAE,EAAC,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,aAAa,EAAC,CAAE;oBAClE,IAAI,EAAE;wBACJ,qBAAqB,EAAE,MAAM;qBAC9B;iBACF;;;;uBAEE,WAAW,SAAC,IAAI;gCAChB,WAAW,SAAC,uBAAuB;;wBArCtC;;SAmCa,aAAa;;;oBAYjB,UAAU;yBAEI,KAAK;;;gBAT3B,SAAS,SAAC;oBACT,QAAQ,EAAE,sCAAsC;oBAChD,IAAI,EAAE;wBACJ,6BAA6B,EAAE,WAAW;qBAC3C;iBACF;;;;uBAME,WAAW,SAAC,IAAI;gCAChB,WAAW,SAAC,uBAAuB;;0BApDtC;;SA8Ca,eAAe;;IAmB1B,sBAAwB,WAAqC;oBALtD,OAAO;QAMZ,IAAI,CAAC,IAAI,GAAG,UAAQ,CAAC,SAAS,IAAI,YAAY,CAAC,CAAC,GAAK,CAAC;KACvD;;gBAZF,SAAS,SAAC;oBACT,QAAQ,EAAE,mCAAmC;oBAC7C,SAAS,EAAE,CAAE,EAAC,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,YAAY,EAAC,CAAE;iBACrE;;;;gBAzDO,YAAY,uBAgEL,QAAQ;gBA/Df,qBAAqB,uBA+DuB,QAAQ;;;uBAHzD,WAAW,SAAC,IAAI;yBAChB,WAAW,SAAC,WAAW;;uBA/D1B;;SA2Da,YAAY","sourcesContent":["import {Directive, HostBinding, Optional} from '@angular/core';\nimport {NglFormGroup} from '../groups/group';\nimport {NglFormGroupAlternate} from '../groups/group-alt';\n\n\n@Directive({\n  selector: 'input[nglFormControl]:not([type=checkbox]), input[nglFormControl]:not([type=radio])',\n  host: {\n    '[class.slds-input]': 'true',\n  },\n})\nexport class NglFormInput {\n  @HostBinding('id') id: string;\n  @HostBinding('attr.aria-describedby') describedBy: string;\n};\n\n@Directive({\n  selector: 'textarea[nglFormControl]',\n  providers: [ {provide: NglFormInput, useExisting: NglFormTextarea} ],\n  host: {\n    '[class.slds-textarea]': 'true',\n  },\n})\nexport class NglFormTextarea {\n  @HostBinding('id') id: string;\n  @HostBinding('attr.aria-describedby') describedBy: string;\n}\n\n@Directive({\n  selector: 'select[nglFormControl]',\n  providers: [ {provide: NglFormInput, useExisting: NglFormSelect} ],\n  host: {\n    '[class.slds-select]': 'true',\n  },\n})\nexport class NglFormSelect {\n  @HostBinding('id') id: string;\n  @HostBinding('attr.aria-describedby') describedBy: string;\n}\n\n@Directive({\n  selector: 'input[nglFormControl][type=checkbox]',\n  host: {\n    '[class.slds-assistive-text]': 'assistive',\n  },\n})\nexport class NglFormCheckbox {\n  type = 'checkbox';\n\n  assistive: boolean = false;\n\n  @HostBinding('id') id: string;\n  @HostBinding('attr.aria-describedby') describedBy: string;\n}\n\n@Directive({\n  selector: 'input[nglFormControl][type=radio]',\n  providers: [ {provide: NglFormCheckbox, useExisting: NglFormRadio} ],\n})\nexport class NglFormRadio {\n  type = 'radio';\n\n  @HostBinding('id') id: string;\n  @HostBinding('attr.name') name: string;\n\n  constructor(@Optional() formGroup: NglFormGroup, @Optional() formGroupAlt: NglFormGroupAlternate) {\n    this.name = `name_${(formGroup || formGroupAlt).uid}`;\n  }\n}\n"]}