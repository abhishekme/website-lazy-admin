{"version":3,"file":"checkbox-add.js","sourceRoot":"","sources":["../../../../../temp/inline/forms/elements/checkbox-add.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAE,uBAAuB,EAAE,YAAY,EAAE,iBAAiB,EAAmB,MAAM,eAAe,CAAC;AAC3H,OAAO,EAAC,cAAc,EAAC,MAAM,WAAW,CAAC;AACzC,OAAO,EAAC,eAAe,EAAC,MAAM,SAAS,CAAC;AACxC,OAAO,EAAC,oBAAoB,EAAC,MAAM,eAAe,CAAC;;IAcJ,6CAAc;IAM3D,mCAAY,QAA2B;eACrC,kBAAM,QAAQ,CAAC;KAChB;IAED,iBAAiB;;IACjB,sDAAkB;;IAAlB;QACE,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;QAChC,iBAAM,kBAAkB,WAAE,CAAC;KAC5B;;gBA1BF,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,QAAQ,EAAE,+KAET;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,IAAI,EAAE;wBACJ,mCAAmC,EAAE,MAAM;qBAC5C;oBACD,SAAS,EAAE,CAAE,EAAC,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,yBAAyB,EAAC,CAAE;oBAChF,MAAM,EAAE,CAAC,2BAA2B,CAAC;iBACtC;;;;gBAhBgE,iBAAiB;;;8BAkB/E,YAAY,SAAC,eAAe;6BAE5B,KAAK,SAAC,OAAO;6BACb,YAAY,SAAC,oBAAoB;;oCArBpC;EAiB+C,cAAc;SAAhD,yBAAyB;AAerC,CAAC","sourcesContent":["import {Component, Input, ChangeDetectionStrategy, ContentChild, ChangeDetectorRef, AfterContentInit} from '@angular/core';\nimport {NglFormElement} from './element';\nimport {NglFormCheckbox} from './input';\nimport {NglFormLabelTemplate} from '../form-label';\n\n@Component({\n  selector: 'ngl-form-checkbox-add',\n  template: `\n    <ng-content></ng-content><label class=\"slds-checkbox--faux\" [attr.for]=\"uid\"><span class=\"slds-assistive-text\" [nglInternalOutlet]=\"_label\"></span></label>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.slds-checkbox--add-button]': 'true',\n  },\n  providers: [ {provide: NglFormElement, useExisting: NglFormElementCheckboxAdd} ],\n  styles: [`:host { display: block; }`],\n})\nexport class NglFormElementCheckboxAdd extends NglFormElement implements AfterContentInit {\n  @ContentChild(NglFormCheckbox) contentEl: NglFormCheckbox;\n\n  @Input('label') labelStr: string;\n  @ContentChild(NglFormLabelTemplate) labelTpl: NglFormLabelTemplate;\n\n  constructor(detector: ChangeDetectorRef) {\n    super(detector);\n  }\n\n  // AoT workaround\n  ngAfterContentInit() {\n    this.contentEl.assistive = true;\n    super.ngAfterContentInit();\n  }\n};\n"]}