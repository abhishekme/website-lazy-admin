/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../util/outlet.ngfactory";
import * as i3 from "../../util/outlet";
import * as i4 from "./element";
import * as i5 from "./checkbox-toggle";
var styles_NglFormElementCheckboxToggle = ["[_nghost-%COMP%] { display: block; }"];
var RenderType_NglFormElementCheckboxToggle = i0.ɵcrt({ encapsulation: 0, styles: styles_NglFormElementCheckboxToggle, data: {} });
export { RenderType_NglFormElementCheckboxToggle as RenderType_NglFormElementCheckboxToggle };
function View_NglFormElementCheckboxToggle_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "abbr", [["class", "slds-required"], ["title", "required"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, ["*"]))], null, null); }
function View_NglFormElementCheckboxToggle_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "div", [["class", "slds-form-element__help"]], [[8, "id", 0]], null, null, null, null)), (_l()(), i0.ɵted(1, null, ["", ""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = ("error_" + _co.uid); _ck(_v, 0, 0, currVal_0); var currVal_1 = _co.error; _ck(_v, 1, 0, currVal_1); }); }
export function View_NglFormElementCheckboxToggle_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 11, "label", [["class", "slds-checkbox--toggle slds-grid"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_NglFormElementCheckboxToggle_1)), i0.ɵdid(2, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵeld(3, 0, null, null, 1, "span", [["class", "slds-form-element__label slds-m-bottom--none"]], null, null, null, i2.View_NglInternalOutlet_0, i2.RenderType_NglInternalOutlet)), i0.ɵdid(4, 573440, null, 0, i3.NglInternalOutlet, [], { nglInternalOutlet: [0, "nglInternalOutlet"] }, null), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(6, 0, null, null, 5, "span", [["aria-live", "assertive"], ["class", "slds-checkbox--faux_container"]], [[1, "for", 0]], null, null, null, null)), (_l()(), i0.ɵeld(7, 0, null, null, 0, "span", [["class", "slds-checkbox--faux"]], null, null, null, null, null)), (_l()(), i0.ɵeld(8, 0, null, null, 1, "span", [["class", "slds-checkbox--on"]], null, null, null, null, null)), (_l()(), i0.ɵted(9, null, ["", ""])), (_l()(), i0.ɵeld(10, 0, null, null, 1, "span", [["class", "slds-checkbox--off"]], null, null, null, null, null)), (_l()(), i0.ɵted(11, null, ["", ""])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_NglFormElementCheckboxToggle_2)), i0.ɵdid(13, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.required; _ck(_v, 2, 0, currVal_0); var currVal_1 = _co._label; _ck(_v, 4, 0, currVal_1); var currVal_5 = _co.error; _ck(_v, 13, 0, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.uid; _ck(_v, 6, 0, currVal_2); var currVal_3 = _co.enabledText; _ck(_v, 9, 0, currVal_3); var currVal_4 = _co.disabledText; _ck(_v, 11, 0, currVal_4); }); }
export function View_NglFormElementCheckboxToggle_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, "ngl-form-checkbox-toggle", [], [[2, "slds-form-element", null], [2, "slds-has-error", null]], null, null, View_NglFormElementCheckboxToggle_0, RenderType_NglFormElementCheckboxToggle)), i0.ɵprd(6144, null, i4.NglFormElement, null, [i5.NglFormElementCheckboxToggle]), i0.ɵdid(2, 1622016, null, 2, i5.NglFormElementCheckboxToggle, [i0.ChangeDetectorRef], null, null), i0.ɵqud(335544320, 1, { contentEl: 0 }), i0.ɵqud(335544320, 2, { labelTpl: 0 })], null, function (_ck, _v) { var currVal_0 = true; var currVal_1 = !!i0.ɵnov(_v, 2).error; _ck(_v, 0, 0, currVal_0, currVal_1); }); }
var NglFormElementCheckboxToggleNgFactory = i0.ɵccf("ngl-form-checkbox-toggle", i5.NglFormElementCheckboxToggle, View_NglFormElementCheckboxToggle_Host_0, { labelStr: "label", tooltipHelp: "tooltipHelp", error: "error", enabledText: "enabledText", disabledText: "disabledText" }, {}, ["*"]);
export { NglFormElementCheckboxToggleNgFactory as NglFormElementCheckboxToggleNgFactory };
//# sourceMappingURL=checkbox-toggle.ngfactory.js.map