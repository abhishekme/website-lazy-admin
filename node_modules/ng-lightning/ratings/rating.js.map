{"version":3,"file":"rating.js","sourceRoot":"","sources":["../../../../temp/inline/ratings/rating.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, ChangeDetectionStrategy, Output, EventEmitter, HostListener,\n        HostBinding, ContentChild, ViewChild, TemplateRef, ChangeDetectorRef} from '@angular/core';\nimport {NglRatingIconTemplate} from './icons';\nimport {NglConfig, NglConfigurable} from '../config/config';\nimport {toBoolean} from '../util/util';\n\n@Component({\n  selector: 'ngl-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-template #t let-fill=\"fill\"><svg class=\"slds-icon\" [nglIcon]=\"icon\" [ngClass]=\"size ? 'slds-icon--' + size : ''\" [style.fill]=\"fill === 100 ? colorOn : colorOff\"></svg><svg class=\"slds-icon\" *ngIf=\"fill &gt; 0 &amp;&amp; fill &lt; 100\" [nglIcon]=\"icon\" [ngClass]=\"size ? 'slds-icon--' + size : ''\" [style.fill]=\"colorOn\" style=\"position:absolute; bottom:0;\" [style.left.%]=\"fill - 100\" [xPos]=\"(100 - fill) + '%'\"></svg></ng-template><div class=\"slds-show--inline-block\" *ngFor=\"let r of range; let i = index\" (click)=\"update(r)\" (mouseenter)=\"enter(r)\" style=\"position: relative;\"><ng-template [ngTemplateOutlet]=\"_template\" [ngTemplateOutletContext]=\"{$implicit: r &lt;= currentRate, index: i, fill: getFill(r)}\"></ng-template></div>\n  `,\n  host: {\n    'style': 'white-space: nowrap;',\n    'tabindex': '0',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n  },\n})\n@NglConfigurable()\nexport class NglRating {\n\n  range: number[] = [];\n  currentRate: number;\n\n  @Input() icon = 'favorite';\n  @Input() size: 'x-small' | 'small' | 'large';\n  @Input() set isReadonly(readonly: any) {\n    this.readonly = toBoolean(readonly);\n  }\n  @Input() set rate(rate: number) {\n    this.inputRate = rate;\n    this.currentRate = rate;\n  }\n\n  @ViewChild('t') defaultTemplate: TemplateRef<any>;\n  @ContentChild(NglRatingIconTemplate) iconTemplate: NglRatingIconTemplate;\n\n  @Input() set max(max: number | string) {\n    this._max = +max;\n    this.setRange();\n  }\n  get max() {\n    return this._max;\n  }\n\n  @Input() colorOn: string;\n  @Input() colorOff: string;\n\n  @Output() rateChange = new EventEmitter<number>();\n  @Output() hover = new EventEmitter<number>();\n\n  private _template: TemplateRef<any>;\n  private _max: number = 5;\n  private readonly = false;\n  private inputRate: number;\n\n  constructor(private config: NglConfig, private cd: ChangeDetectorRef) {\n    this.nglOnConfigChanges();\n  }\n\n  ngOnInit() {\n    this.setRange();\n  }\n\n  ngAfterContentInit() {\n    this._template = this.iconTemplate ? this.iconTemplate.templateRef : this.defaultTemplate;\n  }\n\n  nglOnConfigChanges() {\n    this.colorOn = this.config.get('ratingColorOn');\n    this.colorOff = this.config.get('ratingColorOff');\n  }\n\n  update(value: number) {\n    if (value < 1 || value > this.max || this.readonly || value === this.inputRate) return;\n    this.rateChange.emit(value);\n  }\n\n  enter(value: number) {\n    if (this.readonly) return;\n\n    this.currentRate = value;\n    this.hover.emit(value);\n  }\n\n  getFill(value: number) {\n    if (value <= this.currentRate) {\n      return 100;\n    }\n    if (Math.ceil(this.currentRate) < value) {\n      return 0;\n    }\n\n    return Math.round(100 * (this.currentRate % 1));\n  }\n\n  @HostListener('mouseleave') reset() {\n    this.currentRate = this.inputRate;\n  }\n\n  // Keyboard interactions\n  @HostListener('keydown.ArrowUp', ['$event'])\n  @HostListener('keydown.ArrowRight', ['$event'])\n  keyboardIncrease(evt: KeyboardEvent) {\n    evt.preventDefault();\n    this.update(this.inputRate + 1);\n  }\n\n  @HostListener('keydown.ArrowDown', ['$event'])\n  @HostListener('keydown.ArrowLeft', ['$event'])\n  keyboardDecrease(evt: KeyboardEvent) {\n    evt.preventDefault();\n    this.update(this.inputRate - 1);\n  }\n\n  // ARIA\n  @HostBinding('attr.aria-valuenow') get ariaValuenow() {\n    return this.inputRate;\n  }\n\n  private setRange() {\n    this.range = Array.apply(null, {length: this.max}).map((value: any, index: number) => index + 1);\n  }\n};\n"]}