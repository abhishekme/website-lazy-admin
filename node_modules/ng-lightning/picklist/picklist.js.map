{"version":3,"file":"picklist.js","sourceRoot":"","sources":["../../../../temp/inline/picklist/picklist.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, ChangeDetectionStrategy, Input, Output, EventEmitter, ContentChild, ViewChild, ElementRef} from '@angular/core';\nimport 'rxjs/add/operator/filter';\nimport {NglPicklistItemTemplate} from './item';\nimport {NglPick} from '../pick/pick';\nimport {toBoolean} from '../util/util';\n\n@Component({\n  selector: 'ngl-picklist[nglPick]',\n  template: `\n    <div class=\"slds-picklist\" nglDropdown [open]=\"open\" (openChange)=\"openChange.emit($event)\" [ngClass]=\"{'slds-picklist--fluid': fluid}\"><button class=\"slds-button slds-button--neutral slds-picklist__label\" type=\"button\" nglDropdownTrigger [disabled]=\"disabled\"><ng-content></ng-content><svg class=\"slds-icon\" nglIcon=\"down\"></svg></button><div class=\"slds-dropdown slds-dropdown--left\" [ngClass]=\"{ 'slds-p-top--none': hasFilter }\"><input class=\"slds-input\" *ngIf=\"hasFilter\" #filterInput type=\"text\" [attr.placeholder]=\"filterPlaceholder\" [ngModel]=\"filter\" (ngModelChange)=\"filterChange($event)\" (keydown.enter)=\"onFilterPick()\" (keydown.arrowdown)=\"setFilterActive(1, $event)\" (keydown.arrowup)=\"setFilterActive(-1, $event)\" (focus)=\"onFilterFocus()\" (blur)=\"onFilterBlur()\"><ul class=\"dropdown__list\" role=\"menu\" [ngClass]=\"dropdownListClass\"><li class=\"slds-dropdown__item\" *ngFor=\"let item of filteredData; let i = index\" [nglPickOption]=\"item\" nglPickActiveClass=\"slds-is-selected\" [class.slds-is-active]=\"isOptionActive(i)\" (mouseover)=\"onOptionHover(i)\"><a role=\"menuitem\" nglDropdownItem><p class=\"slds-truncate\"><svg class=\"slds-icon slds-icon--selected slds-icon--x-small slds-icon-text-default slds-m-right--x-small\" nglIcon=\"check\"></svg><ng-template [ngTemplateOutlet]=\"itemTemplate?.templateRef\" [ngTemplateOutletContext]=\"{$implicit: item}\"></ng-template></p></a></li></ul></div></div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`\n    li.slds-is-active {\n      background-color: #F4F6F9;\n    }`,\n  ],\n})\nexport class NglPicklist {\n\n  filteredData: any[];\n\n  @Input() set data(data: any[]) {\n    this._data = data;\n    this.filterData();\n  }\n  get data() {\n    return this._data;\n  }\n\n  @Input() set fluid(fluid: boolean | string) {\n    this._fluid = toBoolean(fluid);\n  }\n  get fluid() {\n    return this._fluid;\n  }\n\n  @Input() set disabled(disabled: boolean | string) {\n    this._disabled = toBoolean(disabled);\n  }\n  get disabled() {\n    return this._disabled;\n  }\n\n  @Input() dropdownListClass: any;\n\n  @Input('filter') filterType: string | Function;\n  @Input() filterPlaceholder: string = '';\n\n  @Input() set open(value: boolean) {\n    this._open = value;\n    if (this.open && this.hasFilter) {\n      setTimeout(() => this.focusFilter());\n    }\n  }\n  get open() {\n    return this._open;\n  }\n  @Output() openChange = new EventEmitter();\n\n  @ContentChild(NglPicklistItemTemplate) itemTemplate: NglPicklistItemTemplate;\n\n  @ViewChild('filterInput') filterInput: ElementRef;\n\n  get hasFilter() {\n    return typeof(this.filterType) !== 'undefined';\n  }\n\n  private _data: any[];\n  private _open = false;\n  private _changeSubscription: any;\n  private _disabled = false;\n  private _fluid = false;\n  private filter = '';\n  private filterActiveIndex: number = 0;\n  private hasFilterFocus: boolean = false;\n\n  constructor(private pick: NglPick) {}\n\n  ngAfterContentInit() {\n    this._changeSubscription = this.pick.nglPickChange.filter(() => !this.pick.isMultiple)\n                                .subscribe(() => this.openChange.emit(false));\n  }\n\n  ngOnDestroy() {\n    if (this._changeSubscription) {\n      this._changeSubscription.unsubscribe();\n      this._changeSubscription = null;\n    }\n  }\n\n  filterData() {\n    this.filteredData = this._filterData();\n    this.setFilterActive(); // Keep active index in bounds\n  }\n\n  _filterData() {\n    if (!this.data || !this.hasFilter || !this.filter) {\n      return this.data;\n    }\n    const filter = <any>this.filterType;\n    switch (typeof(filter)) {\n      case 'string':\n        return this.data.filter(d => (filter ? d[filter] : d.toString()).toLowerCase().indexOf(this.filter.toLowerCase()) !== -1);\n      case 'function':\n        return this.data.filter(filter);\n      default:\n        throw new Error(`Invalid NglPicklist filter type (${typeof(this.filterType)}). The filter must be empty, a field name or a filter function.`);\n    }\n  }\n\n  isOptionActive(index: number) {\n    return this.hasFilter && this.filterActiveIndex === index;\n  }\n\n  onOptionHover(index: number) {\n    if (!this.hasFilterFocus) return;\n    this.filterActiveIndex = index;\n  }\n\n  filterChange(filter: string) {\n    this.filter = filter;\n    this.filterData();\n  }\n\n  setFilterActive(moves: number = 0, evt?: Event) {\n    if (evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n    }\n\n    this.filterActiveIndex = Math.max(Math.min(this.filterActiveIndex + moves, this.filteredData.length - 1), 0);\n  }\n\n  onFilterPick() {\n    if (!this.filteredData.length || this.filterActiveIndex < 0) return;\n    this.pick.selectOption(this.filteredData[this.filterActiveIndex]);\n  }\n\n  focusFilter() {\n    this.filterInput.nativeElement.focus();\n  }\n\n  onFilterFocus() {\n    this.filterActiveIndex = 0;\n    this.hasFilterFocus = true;\n  }\n\n  onFilterBlur() {\n    this.filterActiveIndex = -1;\n    this.hasFilterFocus = false;\n  }\n}\n"]}